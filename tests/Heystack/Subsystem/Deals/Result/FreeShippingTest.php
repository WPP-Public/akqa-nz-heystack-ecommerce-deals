<?php
namespace Heystack\Subsystem\Deals\Test;

use Heystack\Subsystem\Deals\Result\FreeShipping;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-25 at 16:49:36.
 */
class FreeShippingTest extends \PHPUnit_Framework_TestCase
{
    const SHIPPING_TOTAL = 125;

    /**
     * @var FreeShipping
     */
    protected $freeShippingResult;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $adaptableConfigurationStub = $this->getMockBuilder('Heystack\Subsystem\Deals\AdaptableConfiguration')
            ->disableOriginalConstructor()
            ->getMock();

        $shippingHandlerStub = $this->getMockBuilder('Heystack\Subsystem\Shipping\Interfaces\ShippingHandlerInterface')
            ->disableOriginalConstructor()
            ->getMock();

        $shippingHandlerStub->expects($this->any())
            ->method('getTotal')
            ->will(
                $this->returnValue(self::SHIPPING_TOTAL)
            );

        $eventDispatcherStub = $this->getMockBuilder('Symfony\Component\EventDispatcher\EventDispatcherInterface')
            ->disableOriginalConstructor()
            ->getMock();

        $this->freeShippingResult = new FreeShipping($eventDispatcherStub, $shippingHandlerStub, $adaptableConfigurationStub);
    }


    /**
     * @covers Heystack\Subsystem\Deals\Result\FreeShipping::getDescription
     */
    public function testGetDescription()
    {
        $this->assertEquals('Free shipping: Discount of ' . self::SHIPPING_TOTAL, $this->freeShippingResult->getDescription());
    }

    /**
     * @covers Heystack\Subsystem\Deals\Result\FreeShipping::process
     */
    public function testProcess()
    {
        $dealHandlerStub = $this->getMockBuilder('Heystack\Subsystem\Deals\DealHandler')
            ->disableOriginalConstructor()
            ->getMock();

        $this->assertEquals(self::SHIPPING_TOTAL, $this->freeShippingResult->process($dealHandlerStub));
    }
}
