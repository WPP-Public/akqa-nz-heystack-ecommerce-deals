<?php
namespace Heystack\Subsystem\Deals\Test;

use Heystack\Subsystem\Deals\Condition\Time;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-25 at 16:49:07.
 */
class TimeTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Time
     */
    protected $timeCondition;
    protected $adaptableConfigurationStub;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->adaptableConfigurationStub = $this->getMockBuilder('Heystack\Subsystem\Deals\AdaptableConfiguration')
            ->disableOriginalConstructor()
            ->getMock();
    }

    protected function configureStub($getConfigMap, $hasConfigMap)
    {
        $this->adaptableConfigurationStub->expects($this->any())
            ->method('getConfig')
            ->will(
                $this->returnValueMap($getConfigMap)
            );

        $this->adaptableConfigurationStub->expects($this->any())
            ->method('hasConfig')
            ->will(
                $this->returnValueMap($hasConfigMap)
            );

        $this->timeCondition = new Time($this->adaptableConfigurationStub);
    }

    /**
     * @covers Heystack\Subsystem\Deals\Condition\Time::met
     * @covers Heystack\Subsystem\Deals\Condition\Time::getDescription
     */
    public function testStartNowWithoutEnd()
    {
        $this->configureStub(
            [
                [
                    'start', date(Time::$time_format)
                ]
            ],
            [
                [
                    'start', true
                ],
                [
                    'end', false
                ]
            ]
        );

        $this->assertTrue($this->timeCondition->met());

        $this->assertEquals(
            $this->timeCondition->getDescription(),
            'From: ' . date(Time::$time_format)
        );
    }

    /**
     * @covers Heystack\Subsystem\Deals\Condition\Time::met
     * @covers Heystack\Subsystem\Deals\Condition\Time::getDescription
     */
    public function testStartAndEnd()
    {
        $this->configureStub(
            [
                [
                    'start', date(Time::$time_format)
                ],
                [
                    'end', date(Time::$time_format, strtotime(date(Time::$time_format) . ' + 1 day'))
                ]
            ],
            [
                [
                    'start', true
                ],
                [
                    'end', true
                ]
            ]
        );

        $this->assertTrue($this->timeCondition->met());

        $this->assertFalse($this->timeCondition->met(array('Time' => date(Time::$time_format, strtotime(date(Time::$time_format) . ' - 1 day')))));

        $this->assertEquals(
            $this->timeCondition->getDescription(),
            'From: ' . date(Time::$time_format) . '; To: ' . date(Time::$time_format, strtotime(date(Time::$time_format) . ' + 1 day'))
        );

    }

}
